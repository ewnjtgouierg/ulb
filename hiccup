#!/usr/local/bin/php
<?

function cmd($cmd)
	{
		exec("$cmd 2>&1", $output, $retVal);
		if ($retVal)
			{
				echo join($output)."\n";
				exit;
			}
	}

if ($_SERVER['argc']<3) exit("\nUsage: hiccup <dbname> <targetDir>\n\n\ttagetDir must be a git repo, commit & git push is ran in it after backup\n\n");

$db = $_SERVER['argv'][1];
$backupDir = $_SERVER['argv'][2];
if (!is_dir($backupDir)) exit("\n'".$_SERVER['argv'][2]."' is not a directory\n\n");

cmd("chmod o+xw $backupDir");

cmd("rm $backupDir/* || true");

cmd("mysqldump --skip-comments --tab=$backupDir --ignore-table=$db.Language --ignore-table=$db.Cfg --ignore-table=$db.Image_Watermark_Tool --skip-dump-date --fields-terminated-by=',' $db");

$limit = 256*1024;

foreach (scandir($backupDir) as $fileName)
	{
		$pathinfo = pathinfo($fileName);
		if ($pathinfo['extension'] === 'sql')
			{

				$sql = file_get_contents($path = "$backupDir/$fileName");

				$sql = preg_replace("/AUTO_INCREMENT=\d+\s*/", '', $sql);

				$sql = "SET FOREIGN_KEY_CHECKS=0;\n" . $sql;

				$tableName = $pathinfo['filename'];
				$dataFileName = $tableName . '.txt';

				$dataFilePath = "$backupDir/$dataFileName";

				unset($output);
				exec("wc -l $dataFilePath", $output);

				$linesNumber = (int) reset(explode(' ', join($output)));

				if ($linesNumber > $limit)
					{
						$suffixSize = 6;
						cmd("split -l $limit -d -a $suffixSize $dataFilePath $dataFilePath. && rm $dataFilePath");
						$n = ceil($linesNumber / $limit);
						$dataFileNames = [];
						for ($i=0; $i<$n; $i++)
							$dataFileNames[] = "$dataFileName.".str_pad($i, $suffixSize, '0', STR_PAD_LEFT);
					}
				else $dataFileNames = [$dataFileName];

				$sql .= "SET TIME_ZONE='+00:00';\n";
				foreach ($dataFileNames as $dataFileName)
						$sql .=
					"LOAD DATA LOCAL INFILE '$dataFileName' INTO TABLE `$tableName` FIELDS TERMINATED BY ',';\n";

				file_put_contents($path, $sql);

			}

	}

cmd("cd $backupDir && commit \"".date('d.n.Y G:i')."\"");
cmd("cd $backupDir && git push");
